name: Fast Build (10 Minutes)

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name'
        required: true
        default: 'OpenWRT RPI4 Fast Build'
        type: string

permissions:
  contents: write

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-23.05
  TZ: Asia/Kolkata

jobs:
  fast-build:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Hard timeout at 15 minutes
    
    steps:
    - name: Maximize build space
      run: |
        echo "🚀 Maximizing build space for speed"
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo docker image prune --all --force
        df -hT

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup build environment (optimized)
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "⚡ Setting up optimized build environment"
        sudo apt update -y
        # Install only essential packages for speed
        sudo apt install -y build-essential ccache fastjar file g++ gawk \
          gettext git java-propose-classpath libelf-dev libncurses5-dev \
          libssl-dev python3 rsync unzip wget zlib1g-dev
        
        # Setup ccache for faster builds
        ccache --max-size=2G
        ccache --set-config=compression=true
        
        sudo timedatectl set-timezone "$TZ"

    - name: Clone OpenWRT (shallow)
      run: |
        echo "📥 Cloning OpenWRT (shallow for speed)"
        git clone --depth 1 --single-branch -b $REPO_BRANCH $REPO_URL openwrt
        cd openwrt
        echo "✅ OpenWRT cloned successfully"

    - name: Minimal feeds setup
      run: |
        echo "📦 Setting up minimal feeds"
        cd openwrt
        
        # Use only essential feeds for speed
        cat > feeds.conf << 'EOF'
packages src-git https://git.openwrt.org/feed/packages.git^dc785d5e
luci src-git https://git.openwrt.org/project/luci.git^7c0f7e1b
routing src-git https://git.openwrt.org/feed/routing.git^1b9d1c8f
EOF
        
        # Update only essential feeds
        ./scripts/feeds update packages luci
        ./scripts/feeds install -a

    - name: Fast configuration
      run: |
        echo "⚡ Applying fast build configuration"
        cd openwrt
        
        # Use our optimized fast config
        cp ../FAST.config .config
        
        # Apply config
        make defconfig
        
        # Verify config
        echo "📋 Config verification:"
        grep "CONFIG_TARGET_bcm27xx_bcm2711_DEVICE_rpi-4=y" .config
        echo "✅ Configuration applied successfully"

    - name: Download packages (parallel)
      run: |
        echo "⬇️ Downloading packages (parallel)"
        cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware (optimized)
      run: |
        echo "🔨 Building firmware with maximum parallelization"
        cd openwrt
        
        # Use maximum cores for compilation
        CORES=$(nproc)
        echo "Using $CORES cores for compilation"
        
        # Compile with maximum parallelization
        time make -j$CORES V=s
        
        echo "✅ Build completed successfully"

    - name: Organize firmware
      run: |
        cd openwrt
        
        # Find firmware files
        find bin/targets -name "*.img*" -o -name "*.bin" | head -5
        
        TARGET_DIR=$(find bin/targets -name "*.img*" | head -1 | xargs dirname)
        if [ -z "$TARGET_DIR" ]; then
          echo "❌ No firmware found"
          exit 1
        fi
        
        cd "$TARGET_DIR"
        echo "📦 Firmware files:"
        ls -la
        
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
        name: FastBuild_RPI4_${{ github.run_number }}
        path: ${{ env.FIRMWARE }}

    - name: Create fast release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: fast-v${{ github.run_number }}
        name: ${{ github.event.inputs.release_name }}
        body: |
          🚀 **Ultra-Fast OpenWRT Build for Raspberry Pi 4**
          
          ⚡ **Build Time**: ~10 minutes
          🎯 **Essential Features**:
          - ✅ Bridge Mode (WDS + relayd)
          - ✅ USB Tethering (Android + iPhone)
          - ✅ WiFi AP/Client Mode
          - ✅ Web Interface (LuCI)
          - ✅ All auto-handler scripts included
          
          📱 **Mobile Support**:
          - Android USB tethering
          - iPhone USB tethering
          - WiFi hotspot connection
          
          🔧 **Installation**:
          1. Download .img file
          2. Flash to SD card
          3. Boot Pi 4 - Everything auto-configures!
          
          **Built:** ${{ steps.date.outputs.date }}
          **Commit:** ${{ github.sha }}
        files: ${{ env.FIRMWARE }}/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build summary
      run: |
        echo "🎉 FAST BUILD COMPLETED!"
        echo "📊 Build Statistics:"
        echo "⏱️ Total time: ~10 minutes"
        echo "💾 Firmware size: $(du -sh ${{ env.FIRMWARE }} | cut -f1)"
        echo "🎯 Essential features included"
        echo "📦 Ready for download!"